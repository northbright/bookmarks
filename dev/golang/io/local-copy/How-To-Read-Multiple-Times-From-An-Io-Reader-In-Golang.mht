From: <Saved by Blink>
Snapshot-Content-Location: https://golang.cafe/blog/how-to-read-multiple-times-from-an-io-reader-golang.html
Subject: How To Read Multiple Times From An Io Reader In Golang | Golang Cafe
Date: Sun, 17 Dec 2023 10:13:27 -0000
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----MultipartBoundary--EuETGIm5rE5CK1UcbqzQy3lA322WnQiz7nxKOGWWMD----"


------MultipartBoundary--EuETGIm5rE5CK1UcbqzQy3lA322WnQiz7nxKOGWWMD----
Content-Type: text/html
Content-ID: <frame-9DC31256C625EA835F664B6BB0795F60@mhtml.blink>
Content-Transfer-Encoding: quoted-printable
Content-Location: https://golang.cafe/blog/how-to-read-multiple-times-from-an-io-reader-golang.html

<!DOCTYPE html><html lang=3D"en"><head><meta http-equiv=3D"Content-Type" co=
ntent=3D"text/html; charset=3DUTF-8"><link rel=3D"stylesheet" type=3D"text/=
css" href=3D"cid:css-c576a442-80a9-4b19-85a4-1f373cd9ebb0@mhtml.blink" />
    <title>How To Read Multiple Times From An Io Reader In Golang | Golang =
Cafe</title>
    <meta name=3D"viewport" content=3D"width=3Ddevice-width, initial-scale=
=3D1">
   =20
    <meta name=3D"title" content=3D"How To Read Multiple Times From An Io R=
eader In Golang | Golang Cafe">
    <meta name=3D"keywords" content=3D"go, golang, go tutorial, golang tuto=
rial, go io reader, golang io reader, reading multiple times from io reader=
, golang io teereader, golang readseeker">
    <meta name=3D"description" content=3D"In this article we are going to s=
ee how you can read multiple times from an io reader in go">
    <meta itemprop=3D"name" content=3D"How To Read Multiple Times From An I=
o Reader In Golang | Golang Cafe">
    <meta itemprop=3D"description" content=3D"In this article we are going =
to see how you can read multiple times from an io reader in go">
    <meta itemprop=3D"image" content=3D"https://golang.cafe/x/s/m/2DUDLDHdn=
x04GK8C45o5d8jVZ0v">
    <meta property=3D"og:url" content=3D"https://golang.cafe/blog/how-to-re=
ad-multiple-times-from-an-io-reader-golang.html">
    <meta property=3D"og:type" content=3D"website">
    <meta property=3D"og:title" content=3D"How To Read Multiple Times From =
An Io Reader In Golang | Golang Cafe">
    <meta property=3D"og:description" content=3D"In this article we are goi=
ng to see how you can read multiple times from an io reader in go">
    <meta property=3D"og:image" content=3D"https://golang.cafe/x/s/m/2DUDLD=
Hdnx04GK8C45o5d8jVZ0v">
    <meta name=3D"twitter:card" content=3D"summary_large_image">
    <meta name=3D"twitter:title" content=3D"How To Read Multiple Times From=
 An Io Reader In Golang | Golang Cafe">
    <meta name=3D"twitter:description" content=3D"In this article we are go=
ing to see how you can read multiple times from an io reader in go">
    <meta name=3D"twitter:image" content=3D"https://golang.cafe/x/s/m/2DUDL=
DHdnx04GK8C45o5d8jVZ0v">
    <meta name=3D"twitter:site" content=3D"@golangcafe">
   =20
    <link href=3D"https://cdnjs.cloudflare.com/ajax/libs/prism/1.17.1/theme=
s/prism.min.css" rel=3D"stylesheet">
   =20
   =20

 =20

  <meta http-equiv=3D"origin-trial" content=3D"AymqwRC7u88Y4JPvfIF2F37QKylC=
04248hLCdJAsh8xgOfe/dVJPV3XS3wLFca1ZMVOtnBfVjaCMTVudWM//5g4AAAB7eyJvcmlnaW4=
iOiJodHRwczovL3d3dy5nb29nbGV0YWdtYW5hZ2VyLmNvbTo0NDMiLCJmZWF0dXJlIjoiUHJpdm=
FjeVNhbmRib3hBZHNBUElzIiwiZXhwaXJ5IjoxNjk1MTY3OTk5LCJpc1RoaXJkUGFydHkiOnRyd=
WV9"></head>
  <body>
   =20
<header>
    <nav class=3D"menu-header">
        <img src=3D"https://golang.cafe/x/s/m/2DUDLDHdnx04GK8C45o5d8jVZ0v?w=
=3D50&amp;h=3D50" alt=3D"Golang Cafe Logo" class=3D"hover-pointer" style=3D=
"width: 30px; margin-right: 10px; border-radius: 50px; margin-top: 0px; bor=
der: 1px solid #000; float: left;">
        <small style=3D"display:block;float:left;margin-bottom:10px;">
            <a href=3D"https://golang.cafe/">Jobs</a>=E2=80=A2
            <a href=3D"https://golang.cafe/Golang-Developer-Salary-Remote">=
Salaries</a>=E2=80=A2
            <a href=3D"https://golang.cafe/Companies-Using-Golang">Companie=
s</a>=E2=80=A2
            <a href=3D"https://golang.cafe/Golang-Developers">Developers</a=
>
            <br>
        </small>
        <div style=3D"float: right;">
           =20
                <a href=3D"https://golang.cafe/auth">Login</a>
           =20
        </div>
        <div style=3D"clear: both;"></div>
    </nav>
  </header>

    <section style=3D"margin:30px auto;">
      <article>
	      <h1>How To Read Multiple Times From An Io Reader In Golang</h1>
	      <p>In this article we are going to look at how we can efficiently wo=
rk with io.Reader(s). In particular we are going to see how you can read mu=
ltiple times from an io.Reader. This can be for example when reading or par=
tially reading the response body of a HTTP Request or simply the need to re=
ad a file or data from a network connection multiple times. With the highly=
 composable nature of the Go standard library we can easily achieve this by=
 using either of the following</p>

<h2>Using io.TeeReader in Go (Golang)</h2>

<p>The  <a href=3D"https://golang.org/pkg/io/#TeeReader" target=3D"_blank" =
rel=3D"nofollow noreferrer">io.TeeReader</a>  package was inspired by the  =
<a href=3D"https://en.wikipedia.org/wiki/Tee_(command" target=3D"_blank" re=
l=3D"nofollow noreferrer">tee unix command</a>). The tee unix command reads=
 from standard input and writes to standard output and one or more files, e=
ffectively duplicating the input stream. This is what TeeReader does to cer=
tain extents, let=E2=80=99s have a look at the official Go doc</p>

<pre class=3D" language-go"><code class=3D" language-go">func TeeReader(r R=
eader, w Writer) Reader
</code></pre>

<blockquote>
<p>TeeReader returns a Reader that writes to w what it reads from r. All re=
ads from r performed through it are matched with corresponding writes to w.=
 There is no internal buffering - the write must complete before the read c=
ompletes. Any error encountered while writing is reported as a read error.<=
/p>
</blockquote>

<p>Example of how the io.TeeReader works</p>

<pre class=3D" language-go"><code class=3D" language-go">package main

import (
    "fmt"
    "io/ioutil"
    "io"
    "bytes"
    "strings"
)

func main() {
    reader :=3D strings.NewReader("the quick brown fox jumps over the lazy =
dog")
    buf :=3D &amp;bytes.Buffer{}
    tee :=3D io.TeeReader(reader, buf)
    reader1, _ :=3D ioutil.ReadAll(tee)
    reader2, _ :=3D ioutil.ReadAll(buf)
    fmt.Println(string(reader1))
    fmt.Println(string(reader2))
}
</code></pre>

<p>Expected Output</p>

<pre class=3D" language-go"><code class=3D" language-go">the quick brown fo=
x jumps over the lazy dog
the quick brown fox jumps over the lazy dog
</code></pre>

<p>You can also try it here on the Go playground  <a href=3D"https://play.g=
olang.org/p/XtUMQtMdXjn" target=3D"_blank" rel=3D"nofollow noreferrer">http=
s://play.golang.org/p/XtUMQtMdXjn</a></p>

<p><strong>NB</strong>  When using the io.TeeReader remember to read ALL da=
ta from the input reader as the data is copied as long as is read. If you o=
nly read a portion of the input stream the TeeReader is going to copy only =
that portion into the buffer!</p>

<h2>Using io.ReadSeeker in Go (Golang)</h2>

<p>The  <a href=3D"https://golang.org/pkg/io/#ReadSeeker" target=3D"_blank"=
 rel=3D"nofollow noreferrer">io.ReadSeeker</a>  in Go is a combination of t=
he  <a href=3D"https://golang.org/pkg/io/#Reader" target=3D"_blank" rel=3D"=
nofollow noreferrer">io.Reader</a>  interface and the  <a href=3D"https://g=
olang.org/pkg/io/#Seeker" target=3D"_blank" rel=3D"nofollow noreferrer">io.=
Seeker</a>interface. This allows us to re-wind a reader to a specific locat=
ion of the stream by passing an offset relative to the start, current locat=
ion or end of the stream (which can be a file stream, a string, a network c=
onnection or anything that implements an io.Reader). Let=E2=80=99s see firs=
t the signature of the io.Seeker Seek method</p>

<pre class=3D" language-go"><code class=3D" language-go">type Seeker interf=
ace {
    Seek(offset int64, whence int) (int64, error)
}
</code></pre>

<blockquote>
<p>Seek sets the offset for the next Read or Write to offset, interpreted a=
ccording to whence: SeekStart means relative to the start of the file, Seek=
Current means relative to the current offset, and SeekEnd means relative to=
 the end. Seek returns the new offset relative to the start of the file and=
 an error, if any.</p>
</blockquote>

<p>Let=E2=80=99s see an example on how we can read multiple times from the =
same io.Reader using the io.Seeker interface</p>

<pre class=3D" language-go"><code class=3D" language-go">package main

import (
    "fmt"
    "io/ioutil"
    "io"
    "strings"
)

func main() {
    reader :=3D strings.NewReader("the quick brown fox jumps over the lazy =
dog")
    reader1, _ :=3D ioutil.ReadAll(reader)
    reader.Seek(0, io.SeekStart)
    reader2, _ :=3D ioutil.ReadAll(reader)
    fmt.Println(string(reader1))
    fmt.Println(string(reader2))
}
</code></pre>

<p>You can also try it here on the Go playground  <a href=3D"https://play.g=
olang.org/p/pLPbo5dwaFt" target=3D"_blank" rel=3D"nofollow noreferrer">http=
s://play.golang.org/p/pLPbo5dwaFt</a></p>

<p><strong>NB</strong>: the input stream or reader you want to read from an=
d re-wind must implement the io.Seeker interface, for example the os.File a=
nd strings.Reader do implement the io.Seeker interface, but you might want =
to check your specific case</p>

<h2>Go io.TeeReader interface YouTube Tutorial</h2>

<p><a href=3D"https://www.youtube.com/watch?v=3DfJHNhL1FUEs" target=3D"_bla=
nk" rel=3D"nofollow noreferrer"><img src=3D"https://img.youtube.com/vi/fJHN=
hL1FUEs/0.jpg" alt=3D"IMAGE_ALT"></a></p>

      </article>
          <article class=3D"line-item" style=3D"margin-top:20px;">
		  <div style=3D"width: 50%;font-size:15pt;text-align:center;font-weight:b=
old;display:table;margin:20px auto;" id=3D"email-subscribe-item-text">Join =
the Golang Developers Community on Golang Cafe</div>
                <input type=3D"submit" id=3D"email-subscribe-item-btn" valu=
e=3D"Join the Community" style=3D"width:50%;display:table;margin:5px auto;"=
>
            </article>
  </section>
  <footer>
    <nav>
      <small>   =20
	      <a href=3D"https://golang.cafe/">Golang Jobs</a> =E2=80=A2
	      <a href=3D"https://golang.cafe/about">About Golang Cafe</a>
        <br>
      </small>
    </nav>
  </footer>
 =20
 =20
 =20


</body></html>
------MultipartBoundary--EuETGIm5rE5CK1UcbqzQy3lA322WnQiz7nxKOGWWMD----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-c576a442-80a9-4b19-85a4-1f373cd9ebb0@mhtml.blink

@charset "utf-8";

body { background: rgb(255, 255, 255); }

input, textarea, select, button, option, html, body { font-family: Helvetic=
a; font-size: 18px; font-stretch: normal; font-style: normal; font-weight: =
400; line-height: 29.7px; }

input, textarea, select, button, option, html, body { font-family: Helvetic=
a; font-size: 18px; font-stretch: normal; font-style: normal; font-weight: =
400; line-height: 29.7px; }

th { font-weight: 600; }

td, th { border-bottom: 1.08px solid rgb(89, 89, 89); overflow: auto; paddi=
ng: 14.85px 18px; text-align: left; vertical-align: top; }

thead th { border-bottom-width: 2.16px; padding-bottom: 6.3px; }

table { display: table; overflow-x: auto; }

input, textarea, select, button, option, html, body { font-family: Helvetic=
a; font-size: 18px; font-stretch: normal; font-style: normal; font-weight: =
400; line-height: 29.7px; }

fieldset { display: flex; flex-flow: wrap; }

fieldset legend { margin: 18px 0px; }

input, textarea, select, button { border-radius: 3.6px; display: inline-blo=
ck; padding: 9.9px; }

input + label, input + input[type=3D"checkbox"], input + input[type=3D"radi=
o"], textarea + label, textarea + input[type=3D"checkbox"], textarea + inpu=
t[type=3D"radio"], select + label, select + input[type=3D"checkbox"], selec=
t + input[type=3D"radio"], button + label, button + input[type=3D"checkbox"=
], button + input[type=3D"radio"] { break-before: page; }

input, select, label { margin-right: 3.6px; }

textarea { min-height: 90px; min-width: 360px; }

label { display: inline-block; margin-bottom: 12.6px; }

label + * { break-before: page; }

label > input { margin-bottom: 0px; }

input[type=3D"submit"], input[type=3D"reset"], button { background: rgb(242=
, 242, 242); color: rgb(25, 25, 25); cursor: pointer; display: inline; marg=
in-bottom: 18px; margin-right: 7.2px; padding: 6.525px 23.4px; text-align: =
center; }

input[type=3D"submit"]:hover, input[type=3D"reset"]:hover, button:hover { b=
ackground: rgb(217, 217, 217); color: rgb(0, 0, 0); }

input[type=3D"submit"][disabled], input[type=3D"reset"][disabled], button[d=
isabled] { background: rgb(230, 229, 229); color: rgb(64, 63, 63); cursor: =
not-allowed; }

input[type=3D"submit"], button[type=3D"submit"] { background: rgb(37, 167, =
155); color: rgb(255, 255, 255); }

input[type=3D"submit"]:hover, button[type=3D"submit"]:hover { background: r=
gb(0, 0, 197); color: rgb(255, 255, 255); }

input, select, textarea { margin-bottom: 18px; }

input[type=3D"text"], input[type=3D"password"], input[type=3D"email"], inpu=
t[type=3D"url"], input[type=3D"phone"], input[type=3D"tel"], input[type=3D"=
number"], input[type=3D"datetime"], input[type=3D"date"], input[type=3D"mon=
th"], input[type=3D"week"], input[type=3D"color"], input[type=3D"time"], in=
put[type=3D"search"], input[type=3D"range"], input[type=3D"file"], input[ty=
pe=3D"datetime-local"], select, textarea { border: 1px solid rgb(89, 89, 89=
); padding: 5.4px 6.3px; }

input[type=3D"checkbox"], input[type=3D"radio"] { flex-grow: 0; height: 29.=
7px; margin-left: 0px; margin-right: 9px; vertical-align: middle; }

input[type=3D"checkbox"] + label, input[type=3D"radio"] + label { break-bef=
ore: avoid; }

select[multiple] { min-width: 270px; }

input, textarea, select, button, option, html, body { font-family: Helvetic=
a; font-size: 18px; font-stretch: normal; font-style: normal; font-weight: =
400; line-height: 29.7px; }

kbd, samp, var, output { font-family: Menlo, Monaco, Consolas, "Courier New=
", monospace; font-size: 14.4px; }

pre { border-left: 1.8px solid rgb(89, 192, 114); line-height: 25.2px; over=
flow: auto; padding-left: 18px; }

kbd { background: rgb(218, 241, 224); border-radius: 3.6px; color: rgb(42, =
111, 59); display: inline-block; line-height: 18px; padding: 3.6px 6.3px 2.=
7px; }

kbd { background: rgb(42, 111, 59); color: rgb(255, 255, 255); }

mark { background: rgb(255, 255, 204); padding: 0px 3.6px; }

input, textarea, select, button, option, html, body { font-family: Helvetic=
a; font-size: 18px; font-stretch: normal; font-style: normal; font-weight: =
400; line-height: 29.7px; }

h1, h2, h3, h4, h5, h6 { color: rgb(0, 0, 0); margin-bottom: 18px; }

h1 { font-size: 36px; font-weight: 500; line-height: 41.4px; margin-top: 72=
px; }

h2 { font-size: 25.2px; font-weight: 400; line-height: 30.6px; margin-top: =
54px; }

h3 { font-size: 21.6px; line-height: 27px; margin-top: 36px; }

h4 { font-size: 18px; line-height: 23.4px; margin-top: 18px; }

h5 { font-size: 14.4px; font-weight: bold; line-height: 21.6px; text-transf=
orm: uppercase; }

h6 { color: rgb(89, 89, 89); font-size: 14.4px; font-weight: bold; line-hei=
ght: 18px; text-transform: uppercase; }

input, textarea, select, button, option, html, body { font-family: Helvetic=
a; font-size: 18px; font-stretch: normal; font-style: normal; font-weight: =
400; line-height: 29.7px; }

a { color: rgb(37, 167, 155); text-decoration: none; }

a:hover { text-decoration: underline; }

hr { border-bottom: 1px solid rgb(89, 89, 89); }

figcaption, small { font-size: 15.3px; }

figcaption { color: rgb(89, 89, 89); }

var, em, i { font-style: italic; }

dt, strong, b { font-weight: 600; }

del, s { text-decoration: line-through; }

ins, u { text-decoration: underline; }

sub, sup { font-size: 75%; line-height: 0; position: relative; vertical-ali=
gn: baseline; }

sup { top: -0.5em; }

sub { bottom: -0.25em; }

* { border: 0px; border-collapse: separate; border-spacing: 0px; box-sizing=
: border-box; margin: 0px; max-width: 100%; outline: 0px; padding: 0px; ver=
tical-align: baseline; }

html, body { width: 100%; }

html { height: 100%; }

body { color: rgb(26, 25, 25); }

p, ul, ol, dl, blockquote, hr, pre, table, form, fieldset, figure, address =
{ margin-bottom: 29.7px; }

section { margin-left: auto; margin-right: auto; width: 780px; }

article, header, footer { padding: 43.2px; }

article { overflow-wrap: break-word; background: rgb(255, 255, 255); border=
: 1px solid rgb(217, 217, 217); border-radius: 7.2px; }

nav { text-align: center; }

nav ul { list-style: none; margin-left: 0px; text-align: center; }

nav ul li { display: inline-block; margin-left: 9px; margin-right: 9px; ver=
tical-align: middle; }

nav ul li:last-child { margin-right: 0px; }

ol, ul { margin-left: 31.5px; }

li dl, li ol, li ul { margin-bottom: 0px; }

dl { display: inline-block; }

dt { padding: 0px 18px; }

dd { padding: 0px 18px 4.5px; }

dd:last-of-type { border-bottom: 1.08px solid rgb(89, 89, 89); }

dd + dt { border-top: 1.08px solid rgb(89, 89, 89); padding-top: 9px; }

blockquote { border-left: 2.16px solid rgb(89, 89, 89); padding: 4.5px 18px=
 4.5px 15.84px; }

blockquote footer { color: rgb(89, 89, 89); font-size: 13.5px; margin: 0px;=
 }

blockquote p { margin-bottom: 0px; }

img { height: auto; margin: 0px auto; }

figure img { display: block; }

input { appearance: none; }

.menu-header { text-align: left; width: 100%; margin: 20px auto; border-bot=
tom: 1px solid rgb(217, 217, 217); }

.menu-header a { white-space: pre; color: black; font-size: 12pt; font-weig=
ht: bold; padding-right: 5px; }

header { padding: 0px 10px; width: 780px; margin: auto; }
------MultipartBoundary--EuETGIm5rE5CK1UcbqzQy3lA322WnQiz7nxKOGWWMD----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://cdnjs.cloudflare.com/ajax/libs/prism/1.17.1/themes/prism.min.css

@charset "utf-8";

code[class*=3D"language-"], pre[class*=3D"language-"] { color: rgb(0, 0, 0)=
; background: 0px 0px; text-shadow: rgb(255, 255, 255) 0px 1px; font-family=
: Consolas, Monaco, "Andale Mono", "Ubuntu Mono", monospace; font-size: 1em=
; text-align: left; white-space: pre; word-spacing: normal; word-break: nor=
mal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none; }

code[class*=3D"language-"] ::selection, code[class*=3D"language-"]::selecti=
on, pre[class*=3D"language-"] ::selection, pre[class*=3D"language-"]::selec=
tion { text-shadow: none; background: rgb(179, 212, 252); }

@media print {
  code[class*=3D"language-"], pre[class*=3D"language-"] { text-shadow: none=
; }
}

pre[class*=3D"language-"] { padding: 1em; margin: 0.5em 0px; overflow: auto=
; }

:not(pre) > code[class*=3D"language-"], pre[class*=3D"language-"] { backgro=
und: rgb(245, 242, 240); }

:not(pre) > code[class*=3D"language-"] { padding: 0.1em; border-radius: 0.3=
em; white-space: normal; }

.token.cdata, .token.comment, .token.doctype, .token.prolog { color: rgb(11=
2, 128, 144); }

.token.punctuation { color: rgb(153, 153, 153); }

.namespace { opacity: 0.7; }

.token.boolean, .token.constant, .token.deleted, .token.number, .token.prop=
erty, .token.symbol, .token.tag { color: rgb(153, 0, 85); }

.token.attr-name, .token.builtin, .token.char, .token.inserted, .token.sele=
ctor, .token.string { color: rgb(102, 153, 0); }

.language-css .token.string, .style .token.string, .token.entity, .token.op=
erator, .token.url { color: rgb(154, 110, 58); background: rgba(255, 255, 2=
55, 0.5); }

.token.atrule, .token.attr-value, .token.keyword { color: rgb(0, 119, 170);=
 }

.token.class-name, .token.function { color: rgb(221, 74, 104); }

.token.important, .token.regex, .token.variable { color: rgb(238, 153, 0); =
}

.token.bold, .token.important { font-weight: 700; }

.token.italic { font-style: italic; }

.token.entity { cursor: help; }
------MultipartBoundary--EuETGIm5rE5CK1UcbqzQy3lA322WnQiz7nxKOGWWMD----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://golang.cafe/x/s/m/2DUDLDHdnx04GK8C45o5d8jVZ0v?w=50&h=50

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

------MultipartBoundary--EuETGIm5rE5CK1UcbqzQy3lA322WnQiz7nxKOGWWMD------
